var l=class extends Error{constructor(e){let t;e instanceof Error?t=e.message:typeof e=="string"?t=e:t="",super(t),this.name=this.constructor.name}},p=class extends l{},F=class extends l{},w=class extends l{},y=class extends l{},z=class extends l{},L=class extends l{},$=class extends l{},X=class extends l{},Y=class extends l{},W=class extends l{},H=class extends l{},m=class extends l{};var Z={},g=q(globalThis,Z);function q(i,e){return new Proxy(i,{get(t,r,n){return r in e?e[r]:i[r]},set(t,r,n){return r in e&&delete e[r],i[r]=n,!0},deleteProperty(t,r){let n=!1;return r in e&&(delete e[r],n=!0),r in i&&(delete i[r],n=!0),n},ownKeys(t){let r=Reflect.ownKeys(i),n=Reflect.ownKeys(e),a=new Set(n);return[...r.filter(s=>!a.has(s)),...n]},defineProperty(t,r,n){return r in e&&delete e[r],Reflect.defineProperty(i,r,n),!0},getOwnPropertyDescriptor(t,r){return r in e?Reflect.getOwnPropertyDescriptor(e,r):Reflect.getOwnPropertyDescriptor(i,r)},has(t,r){return r in e||r in i}})}async function Q(){if(g!==void 0&&globalThis.crypto!==void 0)return globalThis.crypto.subtle;try{let{webcrypto:i}=await import("crypto");return i.subtle}catch(i){throw new m(i)}}var K=class{constructor(){Object.defineProperty(this,"_api",{enumerable:!0,configurable:!0,writable:!0,value:void 0})}async _setup(){this._api===void 0&&(this._api=await Q())}};var ee={Base:0,Psk:1,Auth:2,AuthPsk:3},d={NotAssigned:0,DhkemP256HkdfSha256:16,DhkemP384HkdfSha384:17,DhkemP521HkdfSha512:18,DhkemSecp256k1HkdfSha256:19,DhkemX25519HkdfSha256:32,DhkemX448HkdfSha512:33,HybridkemX25519Kyber768:48,MlKem512:64,MlKem768:65,MlKem1024:66,XWing:25722},v={HkdfSha256:1,HkdfSha384:2,HkdfSha512:3},te={Aes128Gcm:1,Aes256Gcm:2,Chacha20Poly1305:3,ExportOnly:65535};var T=8192,re=65536,ie=32,h=new Uint8Array(0);var k=new Uint8Array([75,69,77,0,0]);var ne=()=>g.process===void 0;function ae(){return g.process===void 0?!0:g.process?.versions?.deno!==void 0}var b=i=>typeof i=="object"&&i!==null&&typeof i.privateKey=="object"&&typeof i.publicKey=="object";function P(i,e){if(e<=0)throw new Error("i2Osp: too small size");if(i>=256**e)throw new Error("i2Osp: too large integer");let t=new Uint8Array(e);for(let r=0;r<e&&i;r++)t[e-(r+1)]=i%256,i=i>>8;return t}function c(i,e){let t=new Uint8Array(i.length+e.length);return t.set(i,0),t.set(e,i.length),t}function C(i){let e=i.replace(/-/g,"+").replace(/_/g,"/"),t=atob(e),r=new Uint8Array(t.length);for(let n=0;n<t.length;n++)r[n]=t.charCodeAt(n);return r}function se(i){if(i.length===0)return new Uint8Array([]);let e=i.match(/[\da-f]{2}/gi);if(e==null)throw new Error("Not hex string.");return new Uint8Array(e.map(function(t){return parseInt(t,16)}))}function oe(i){switch(i){case d.DhkemP256HkdfSha256:return{name:"ECDH",namedCurve:"P-256"};case d.DhkemP384HkdfSha384:return{name:"ECDH",namedCurve:"P-384"};case d.DhkemP521HkdfSha512:return{name:"ECDH",namedCurve:"P-521"};default:return{name:"X25519"}}}async function ue(){if(g!==void 0&&globalThis.crypto!==void 0)return globalThis.crypto.subtle;try{let{webcrypto:i}=await import("crypto");return i.subtle}catch{throw new Error("Failed to load SubtleCrypto")}}async function le(){if(g!==void 0&&globalThis.crypto!==void 0)return globalThis.crypto;try{let{webcrypto:i}=await import("crypto");return i}catch{throw new Error("Web Cryptograph API not supported")}}function ce(i,e){if(i.byteLength!==e.byteLength)throw new Error("xor: different length inputs");let t=new Uint8Array(i.byteLength);for(let r=0;r<i.byteLength;r++)t[r]=i[r]^e[r];return t}var he=new Uint8Array([101,97,101,95,112,114,107]),fe=new Uint8Array([115,104,97,114,101,100,95,115,101,99,114,101,116]);function ye(i,e,t){let r=new Uint8Array(i.length+e.length+t.length);return r.set(i,0),r.set(e,i.length),r.set(t,i.length+e.length),r}var O=class{constructor(e,t,r){Object.defineProperty(this,"id",{enumerable:!0,configurable:!0,writable:!0,value:void 0}),Object.defineProperty(this,"secretSize",{enumerable:!0,configurable:!0,writable:!0,value:0}),Object.defineProperty(this,"encSize",{enumerable:!0,configurable:!0,writable:!0,value:0}),Object.defineProperty(this,"publicKeySize",{enumerable:!0,configurable:!0,writable:!0,value:0}),Object.defineProperty(this,"privateKeySize",{enumerable:!0,configurable:!0,writable:!0,value:0}),Object.defineProperty(this,"_prim",{enumerable:!0,configurable:!0,writable:!0,value:void 0}),Object.defineProperty(this,"_kdf",{enumerable:!0,configurable:!0,writable:!0,value:void 0}),this.id=e,this._prim=t,this._kdf=r;let n=new Uint8Array(k);n.set(P(this.id,2),3),this._kdf.init(n)}async serializePublicKey(e){return await this._prim.serializePublicKey(e)}async deserializePublicKey(e){return await this._prim.deserializePublicKey(e)}async serializePrivateKey(e){return await this._prim.serializePrivateKey(e)}async deserializePrivateKey(e){return await this._prim.deserializePrivateKey(e)}async importKey(e,t,r=!0){return await this._prim.importKey(e,t,r)}async generateKeyPair(){return await this._prim.generateKeyPair()}async deriveKeyPair(e){if(e.byteLength>8192)throw new p("Too long ikm");return await this._prim.deriveKeyPair(e)}async encap(e){let t;e.ekm===void 0?t=await this.generateKeyPair():b(e.ekm)?t=e.ekm:t=await this.deriveKeyPair(e.ekm);let r=await this._prim.serializePublicKey(t.publicKey),n=await this._prim.serializePublicKey(e.recipientPublicKey);try{let a;if(e.senderKey===void 0)a=new Uint8Array(await this._prim.dh(t.privateKey,e.recipientPublicKey));else{let u=b(e.senderKey)?e.senderKey.privateKey:e.senderKey,f=new Uint8Array(await this._prim.dh(t.privateKey,e.recipientPublicKey)),x=new Uint8Array(await this._prim.dh(u,e.recipientPublicKey));a=c(f,x)}let s;if(e.senderKey===void 0)s=c(new Uint8Array(r),new Uint8Array(n));else{let u=b(e.senderKey)?e.senderKey.publicKey:await this._prim.derivePublicKey(e.senderKey),f=await this._prim.serializePublicKey(u);s=ye(new Uint8Array(r),new Uint8Array(n),new Uint8Array(f))}let o=await this._generateSharedSecret(a,s);return{enc:r,sharedSecret:o}}catch(a){throw new z(a)}}async decap(e){let t=await this._prim.deserializePublicKey(e.enc),r=b(e.recipientKey)?e.recipientKey.privateKey:e.recipientKey,n=b(e.recipientKey)?e.recipientKey.publicKey:await this._prim.derivePublicKey(e.recipientKey),a=await this._prim.serializePublicKey(n);try{let s;if(e.senderPublicKey===void 0)s=new Uint8Array(await this._prim.dh(r,t));else{let u=new Uint8Array(await this._prim.dh(r,t)),f=new Uint8Array(await this._prim.dh(r,e.senderPublicKey));s=c(u,f)}let o;if(e.senderPublicKey===void 0)o=c(new Uint8Array(e.enc),new Uint8Array(a));else{let u=await this._prim.serializePublicKey(e.senderPublicKey);o=new Uint8Array(e.enc.byteLength+a.byteLength+u.byteLength),o.set(new Uint8Array(e.enc),0),o.set(new Uint8Array(a),e.enc.byteLength),o.set(new Uint8Array(u),e.enc.byteLength+a.byteLength)}return await this._generateSharedSecret(s,o)}catch(s){throw new L(s)}}async _generateSharedSecret(e,t){let r=this._kdf.buildLabeledIkm(he,e),n=this._kdf.buildLabeledInfo(fe,t,this.secretSize);return await this._kdf.extractAndExpand(h.buffer,r.buffer,n.buffer,this.secretSize)}};var S=["deriveBits"],E=new Uint8Array([100,107,112,95,112,114,107]),B=new Uint8Array([115,107]);var D=class{constructor(e){Object.defineProperty(this,"_num",{enumerable:!0,configurable:!0,writable:!0,value:void 0}),this._num=new Uint8Array(e)}val(){return this._num}reset(){this._num.fill(0)}set(e){if(e.length!==this._num.length)throw new Error("Bignum.set: invalid argument");this._num.set(e)}isZero(){for(let e=0;e<this._num.length;e++)if(this._num[e]!==0)return!1;return!0}lessThan(e){if(e.length!==this._num.length)throw new Error("Bignum.lessThan: invalid argument");for(let t=0;t<this._num.length;t++){if(this._num[t]<e[t])return!0;if(this._num[t]>e[t])return!1}return!1}};var de=new Uint8Array([99,97,110,100,105,100,97,116,101]),be=new Uint8Array([255,255,255,255,0,0,0,0,255,255,255,255,255,255,255,255,188,230,250,173,167,23,158,132,243,185,202,194,252,99,37,81]),pe=new Uint8Array([255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,199,99,77,129,244,55,45,223,88,26,13,178,72,176,167,122,236,236,25,106,204,197,41,115]),we=new Uint8Array([1,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,250,81,134,135,131,191,47,150,107,127,204,1,72,247,9,165,208,59,181,201,184,137,156,71,174,187,111,183,30,145,56,100,9]),xe=new Uint8Array([48,65,2,1,0,48,19,6,7,42,134,72,206,61,2,1,6,8,42,134,72,206,61,3,1,7,4,39,48,37,2,1,1,4,32]),_e=new Uint8Array([48,78,2,1,0,48,16,6,7,42,134,72,206,61,2,1,6,5,43,129,4,0,34,4,55,48,53,2,1,1,4,48]),me=new Uint8Array([48,96,2,1,0,48,16,6,7,42,134,72,206,61,2,1,6,5,43,129,4,0,35,4,73,48,71,2,1,1,4,66]),M=class extends K{constructor(e,t){switch(super(),Object.defineProperty(this,"_hkdf",{enumerable:!0,configurable:!0,writable:!0,value:void 0}),Object.defineProperty(this,"_alg",{enumerable:!0,configurable:!0,writable:!0,value:void 0}),Object.defineProperty(this,"_nPk",{enumerable:!0,configurable:!0,writable:!0,value:void 0}),Object.defineProperty(this,"_nSk",{enumerable:!0,configurable:!0,writable:!0,value:void 0}),Object.defineProperty(this,"_nDh",{enumerable:!0,configurable:!0,writable:!0,value:void 0}),Object.defineProperty(this,"_order",{enumerable:!0,configurable:!0,writable:!0,value:void 0}),Object.defineProperty(this,"_bitmask",{enumerable:!0,configurable:!0,writable:!0,value:void 0}),Object.defineProperty(this,"_pkcs8AlgId",{enumerable:!0,configurable:!0,writable:!0,value:void 0}),this._hkdf=t,e){case d.DhkemP256HkdfSha256:this._alg={name:"ECDH",namedCurve:"P-256"},this._nPk=65,this._nSk=32,this._nDh=32,this._order=be,this._bitmask=255,this._pkcs8AlgId=xe;break;case d.DhkemP384HkdfSha384:this._alg={name:"ECDH",namedCurve:"P-384"},this._nPk=97,this._nSk=48,this._nDh=48,this._order=pe,this._bitmask=255,this._pkcs8AlgId=_e;break;default:this._alg={name:"ECDH",namedCurve:"P-521"},this._nPk=133,this._nSk=66,this._nDh=66,this._order=we,this._bitmask=1,this._pkcs8AlgId=me;break}}async serializePublicKey(e){await this._setup();try{return await this._api.exportKey("raw",e)}catch(t){throw new w(t)}}async deserializePublicKey(e){await this._setup();try{return await this._importRawKey(e,!0)}catch(t){throw new y(t)}}async serializePrivateKey(e){await this._setup();try{let t=await this._api.exportKey("jwk",e);if(!("d"in t))throw new Error("Not private key");return C(t.d).buffer}catch(t){throw new w(t)}}async deserializePrivateKey(e){await this._setup();try{return await this._importRawKey(e,!1)}catch(t){throw new y(t)}}async importKey(e,t,r){await this._setup();try{if(e==="raw")return await this._importRawKey(t,r);if(t instanceof ArrayBuffer)throw new Error("Invalid jwk key format");return await this._importJWK(t,r)}catch(n){throw new y(n)}}async generateKeyPair(){await this._setup();try{return await this._api.generateKey(this._alg,!0,S)}catch(e){throw new m(e)}}async deriveKeyPair(e){await this._setup();try{let t=await this._hkdf.labeledExtract(h.buffer,E,new Uint8Array(e)),r=new D(this._nSk);for(let a=0;r.isZero()||!r.lessThan(this._order);a++){if(a>255)throw new Error("Faild to derive a key pair");let s=new Uint8Array(await this._hkdf.labeledExpand(t,de,P(a,1),this._nSk));s[0]=s[0]&this._bitmask,r.set(s)}let n=await this._deserializePkcs8Key(r.val());return r.reset(),{privateKey:n,publicKey:await this.derivePublicKey(n)}}catch(t){throw new H(t)}}async derivePublicKey(e){await this._setup();try{let t=await this._api.exportKey("jwk",e);return delete t.d,delete t.key_ops,await this._api.importKey("jwk",t,this._alg,!0,[])}catch(t){throw new y(t)}}async dh(e,t){try{return await this._setup(),await this._api.deriveBits({name:"ECDH",public:t},e,this._nDh*8)}catch(r){throw new w(r)}}async _importRawKey(e,t){if(t&&e.byteLength!==this._nPk)throw new Error("Invalid public key for the ciphersuite");if(!t&&e.byteLength!==this._nSk)throw new Error("Invalid private key for the ciphersuite");return t?await this._api.importKey("raw",e,this._alg,!0,[]):await this._deserializePkcs8Key(new Uint8Array(e))}async _importJWK(e,t){if(typeof e.crv>"u"||e.crv!==this._alg.namedCurve)throw new Error(`Invalid crv: ${e.crv}`);if(t){if(typeof e.d<"u")throw new Error("Invalid key: `d` should not be set");return await this._api.importKey("jwk",e,this._alg,!0,[])}if(typeof e.d>"u")throw new Error("Invalid key: `d` not found");return await this._api.importKey("jwk",e,this._alg,!0,S)}async _deserializePkcs8Key(e){let t=new Uint8Array(this._pkcs8AlgId.length+e.length);return t.set(this._pkcs8AlgId,0),t.set(e,this._pkcs8AlgId.length),await this._api.importKey("pkcs8",t,this._alg,!0,S)}};var A=class{constructor(e,t,r,n=[]){Object.defineProperty(this,"key",{enumerable:!0,configurable:!0,writable:!0,value:void 0}),Object.defineProperty(this,"type",{enumerable:!0,configurable:!0,writable:!0,value:void 0}),Object.defineProperty(this,"extractable",{enumerable:!0,configurable:!0,writable:!0,value:!0}),Object.defineProperty(this,"algorithm",{enumerable:!0,configurable:!0,writable:!0,value:void 0}),Object.defineProperty(this,"usages",{enumerable:!0,configurable:!0,writable:!0,value:void 0}),this.key=t,this.type=r,this.algorithm={name:e},this.usages=n,r==="public"&&(this.usages=[])}};var j=class{constructor(e,t,r,n){Object.defineProperty(this,"id",{enumerable:!0,configurable:!0,writable:!0,value:d.NotAssigned}),Object.defineProperty(this,"name",{enumerable:!0,configurable:!0,writable:!0,value:""}),Object.defineProperty(this,"secretSize",{enumerable:!0,configurable:!0,writable:!0,value:0}),Object.defineProperty(this,"encSize",{enumerable:!0,configurable:!0,writable:!0,value:0}),Object.defineProperty(this,"publicKeySize",{enumerable:!0,configurable:!0,writable:!0,value:0}),Object.defineProperty(this,"privateKeySize",{enumerable:!0,configurable:!0,writable:!0,value:0}),Object.defineProperty(this,"_a",{enumerable:!0,configurable:!0,writable:!0,value:void 0}),Object.defineProperty(this,"_b",{enumerable:!0,configurable:!0,writable:!0,value:void 0}),Object.defineProperty(this,"_kdf",{enumerable:!0,configurable:!0,writable:!0,value:void 0}),this.id=e,this._a=t,this._b=r,this._kdf=n;let a=new Uint8Array(k);a.set(P(this.id,2),3),this._kdf.init(a)}async serializePublicKey(e){try{return await this._serializePublicKey(e)}catch(t){throw new w(t)}}async deserializePublicKey(e){try{return await this._deserializePublicKey(e)}catch(t){throw new y(t)}}async serializePrivateKey(e){try{return await this._serializePrivateKey(e)}catch(t){throw new w(t)}}async deserializePrivateKey(e){try{return await this._deserializePrivateKey(e)}catch(t){throw new y(t)}}async generateKeyPair(){let e=await this._a.generateKeyPair(),t=await this._b.generateKeyPair(),r=await this._a.serializePublicKey(e.publicKey),n=await this._a.serializePrivateKey(e.privateKey),a=await this._b.serializePublicKey(t.publicKey),s=await this._b.serializePrivateKey(t.privateKey);return{publicKey:await this.deserializePublicKey(c(new Uint8Array(r),new Uint8Array(a)).buffer),privateKey:await this.deserializePrivateKey(c(new Uint8Array(n),new Uint8Array(s)).buffer)}}async deriveKeyPair(e){let t=await this._kdf.labeledExtract(h.buffer,E,new Uint8Array(e)),r=new Uint8Array(await this._kdf.labeledExpand(t,B,h,96)),n=r.slice(0,32),a=r.slice(32,96),s=await this._a.deriveKeyPair(n.buffer),o=await this._b.deriveKeyPair(a.buffer),u=await this._a.serializePublicKey(s.publicKey),f=await this._a.serializePrivateKey(s.privateKey),x=await this._b.serializePublicKey(o.publicKey),I=await this._b.serializePrivateKey(o.privateKey);return{publicKey:await this.deserializePublicKey(c(new Uint8Array(u),new Uint8Array(x)).buffer),privateKey:await this.deserializePrivateKey(c(new Uint8Array(f),new Uint8Array(I)).buffer)}}async importKey(e,t,r=!0){if(e!=="raw")throw new m("'jwk' is not supported");if(!(t instanceof ArrayBuffer))throw new p("Invalid type of key");return r?await this.deserializePublicKey(t):await this.deserializePrivateKey(t)}async encap(e){let t,r;if(e.ekm!==void 0&&!b(e.ekm)){if(e.ekm.byteLength!==64)throw new p("ekm must be 64 bytes in length");t=e.ekm.slice(0,32),r=e.ekm.slice(32)}let n=new Uint8Array(await this.serializePublicKey(e.recipientPublicKey)),a=await this._a.deserializePublicKey(n.slice(0,this._a.publicKeySize).buffer),s=await this._b.deserializePublicKey(n.slice(this._a.publicKeySize).buffer),o=await this._a.encap({recipientPublicKey:a,ekm:t}),u=await this._b.encap({recipientPublicKey:s,ekm:r});return{sharedSecret:c(new Uint8Array(o.sharedSecret),new Uint8Array(u.sharedSecret)).buffer,enc:c(new Uint8Array(o.enc),new Uint8Array(u.enc)).buffer}}async decap(e){let t=b(e.recipientKey)?e.recipientKey.privateKey:e.recipientKey,r=new Uint8Array(await this.serializePrivateKey(t)),n=await this._a.deserializePrivateKey(r.slice(0,this._a.privateKeySize).buffer),a=await this._b.deserializePrivateKey(r.slice(this._a.privateKeySize).buffer),s=await this._a.decap({recipientKey:n,enc:e.enc.slice(0,this._a.encSize)}),o=await this._b.decap({recipientKey:a,enc:e.enc.slice(this._a.encSize)});return c(new Uint8Array(s),new Uint8Array(o)).buffer}_serializePublicKey(e){return new Promise((t,r)=>{e.type!=="public"&&r(new Error("Not public key")),e.algorithm.name!==this.name&&r(new Error(`Invalid algorithm name: ${e.algorithm.name}`)),e.key.byteLength!==this.publicKeySize&&r(new Error(`Invalid key length: ${e.key.byteLength}`)),t(e.key.buffer)})}_deserializePublicKey(e){return new Promise((t,r)=>{e.byteLength!==this.publicKeySize&&r(new Error(`Invalid key length: ${e.byteLength}`)),t(new A(this.name,new Uint8Array(e),"public"))})}_serializePrivateKey(e){return new Promise((t,r)=>{e.type!=="private"&&r(new Error("Not private key")),e.algorithm.name!==this.name&&r(new Error(`Invalid algorithm name: ${e.algorithm.name}`)),e.key.byteLength!==this.privateKeySize&&r(new Error(`Invalid key length: ${e.key.byteLength}`)),t(e.key.buffer)})}_deserializePrivateKey(e){return new Promise((t,r)=>{e.byteLength!==this.privateKeySize&&r(new Error(`Invalid key length: ${e.byteLength}`)),t(new A(this.name,new Uint8Array(e),"private",["deriveBits"]))})}};var V=new Uint8Array([72,80,75,69,45,118,49]),U=class extends K{constructor(){super(),Object.defineProperty(this,"id",{enumerable:!0,configurable:!0,writable:!0,value:v.HkdfSha256}),Object.defineProperty(this,"hashSize",{enumerable:!0,configurable:!0,writable:!0,value:0}),Object.defineProperty(this,"_suiteId",{enumerable:!0,configurable:!0,writable:!0,value:h}),Object.defineProperty(this,"algHash",{enumerable:!0,configurable:!0,writable:!0,value:{name:"HMAC",hash:"SHA-256",length:256}})}init(e){this._suiteId=e}buildLabeledIkm(e,t){this._checkInit();let r=new Uint8Array(7+this._suiteId.byteLength+e.byteLength+t.byteLength);return r.set(V,0),r.set(this._suiteId,7),r.set(e,7+this._suiteId.byteLength),r.set(t,7+this._suiteId.byteLength+e.byteLength),r}buildLabeledInfo(e,t,r){this._checkInit();let n=new Uint8Array(9+this._suiteId.byteLength+e.byteLength+t.byteLength);return n.set(new Uint8Array([0,r]),0),n.set(V,2),n.set(this._suiteId,9),n.set(e,9+this._suiteId.byteLength),n.set(t,9+this._suiteId.byteLength+e.byteLength),n}async extract(e,t){if(await this._setup(),e.byteLength===0&&(e=new ArrayBuffer(this.hashSize)),e.byteLength!==this.hashSize)throw new p("The salt length must be the same as the hashSize");let r=await this._api.importKey("raw",e,this.algHash,!1,["sign"]);return await this._api.sign("HMAC",r,t)}async expand(e,t,r){await this._setup();let n=await this._api.importKey("raw",e,this.algHash,!1,["sign"]),a=new ArrayBuffer(r),s=new Uint8Array(a),o=h,u=new Uint8Array(t),f=new Uint8Array(1);if(r>255*this.hashSize)throw new Error("Entropy limit reached");let x=new Uint8Array(this.hashSize+u.length+1);for(let I=1,_=0;_<s.length;I++)f[0]=I,x.set(o,0),x.set(u,o.length),x.set(f,o.length+u.length),o=new Uint8Array(await this._api.sign("HMAC",n,x.slice(0,o.length+u.length+1))),s.length-_>=o.length?(s.set(o,_),_+=o.length):(s.set(o.slice(0,s.length-_),_),_+=s.length-_);return a}async extractAndExpand(e,t,r,n){await this._setup();let a=await this._api.importKey("raw",t,"HKDF",!1,["deriveBits"]);return await this._api.deriveBits({name:"HKDF",hash:this.algHash.hash,salt:e,info:r},a,n*8)}async labeledExtract(e,t,r){return await this.extract(e,this.buildLabeledIkm(t,r).buffer)}async labeledExpand(e,t,r,n){return await this.expand(e,this.buildLabeledInfo(t,r,n).buffer,n)}_checkInit(){if(this._suiteId===h)throw new Error("Not initialized. Call init()")}},R=class extends U{constructor(){super(...arguments),Object.defineProperty(this,"id",{enumerable:!0,configurable:!0,writable:!0,value:v.HkdfSha256}),Object.defineProperty(this,"hashSize",{enumerable:!0,configurable:!0,writable:!0,value:32}),Object.defineProperty(this,"algHash",{enumerable:!0,configurable:!0,writable:!0,value:{name:"HMAC",hash:"SHA-256",length:256}})}},G=class extends U{constructor(){super(...arguments),Object.defineProperty(this,"id",{enumerable:!0,configurable:!0,writable:!0,value:v.HkdfSha384}),Object.defineProperty(this,"hashSize",{enumerable:!0,configurable:!0,writable:!0,value:48}),Object.defineProperty(this,"algHash",{enumerable:!0,configurable:!0,writable:!0,value:{name:"HMAC",hash:"SHA-384",length:384}})}},N=class extends U{constructor(){super(...arguments),Object.defineProperty(this,"id",{enumerable:!0,configurable:!0,writable:!0,value:v.HkdfSha512}),Object.defineProperty(this,"hashSize",{enumerable:!0,configurable:!0,writable:!0,value:64}),Object.defineProperty(this,"algHash",{enumerable:!0,configurable:!0,writable:!0,value:{name:"HMAC",hash:"SHA-512",length:512}})}};var ge=["encrypt","decrypt"];export{ge as AEAD_USAGES,te as AeadId,L as DecapError,H as DeriveKeyPairError,y as DeserializeError,O as Dhkem,h as EMPTY,M as Ec,z as EncapError,$ as ExportError,R as HkdfSha256Native,G as HkdfSha384Native,N as HkdfSha512Native,l as HpkeError,j as Hybridkem,re as INFO_LENGTH_LIMIT,T as INPUT_LENGTH_LIMIT,p as InvalidParamError,S as KEM_USAGES,v as KdfId,d as KemId,E as LABEL_DKP_PRK,B as LABEL_SK,ie as MINIMUM_PSK_LENGTH,W as MessageLimitReachedError,ee as Mode,K as NativeAlgorithm,m as NotSupportedError,Y as OpenError,k as SUITE_ID_HEADER_KEM,X as SealError,w as SerializeError,F as ValidationError,A as XCryptoKey,C as base64UrlToBytes,c as concat,se as hexToBytes,P as i2Osp,b as isCryptoKeyPair,ae as isDeno,ne as isDenoV1,oe as kemToKeyGenAlgorithm,le as loadCrypto,ue as loadSubtleCrypto,ce as xor};
