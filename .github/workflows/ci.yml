name: Deno CI

on:
  push:
    branches: [main]
  pull_request:
    branches: [main]

permissions:
  contents: read

jobs:
  test:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        deno-version: [2.x]
    steps:
      - uses: actions/checkout@v4
      - uses: denoland/setup-deno@v1
        with:
          deno-version: ${{ matrix.deno-version }}
      - name: Run deno test
        run: |
          deno fmt --check
          deno task test
          deno task cov > coverage.lcov
      - uses: codecov/codecov-action@v2
        if: matrix.deno-version == '2.x'
        with:
          token: ${{ secrets.CODECOV_TOKEN }}
          files: ./coverage.lcov
          flags: unittests
      - name: Run deno publish (dry)
        run: npx jsr publish --dry-run --allow-dirty
      # - name: Run deno test for /core
      #   working-directory: ./core
      #   run: |
      #     deno fmt --check
      #     deno task test
      # - name: Run deno test for /packages/dhkem-x25519
      #   working-directory: ./packages/dhkem-x25519
      #   run: |
      #     deno fmt --check
      #     deno task test
      # - name: Run deno test for /packages/dhkem-x448
      #   working-directory: ./packages/dhkem-x448
      #   run: |
      #     deno fmt --check
      #     deno task test
      # - name: Run deno test for /packages/chacha20poly1305
      #   working-directory: ./packages/chacha20poly1305
      #   run: |
      #     deno fmt --check
      #     deno task test
      # - name: Run deno test for /packages/hybridkem-x25519-kyber768
      #   working-directory: ./packages/hybridkem-x25519-kyber768
      #   run: |
      #     deno fmt --check
      #     deno task test
      # - name: Run deno test for /packages/dhkem-secp256k1
      #   working-directory: ./packages/dhkem-secp256k1
      #   run: |
      #     deno fmt --check
      #     deno task test
