var z=class extends Error{constructor(e){let t;e instanceof Error?t=e.message:typeof e=="string"?t=e:t="",super(t),this.name=this.constructor.name}},c=class extends z{},b=class extends c{},B=class extends c{},y=class extends c{},f=class extends c{},v=class extends c{},k=class extends c{},H=class extends c{},O=class extends c{},C=class extends c{},M=class extends c{},A=class extends c{},d=class extends c{};var F={},j=$(globalThis,F);function $(i,e){return new Proxy(i,{get(t,r,n){return r in e?e[r]:i[r]},set(t,r,n){return r in e&&delete e[r],i[r]=n,!0},deleteProperty(t,r){let n=!1;return r in e&&(delete e[r],n=!0),r in i&&(delete i[r],n=!0),n},ownKeys(t){let r=Reflect.ownKeys(i),n=Reflect.ownKeys(e),a=new Set(n);return[...r.filter(s=>!a.has(s)),...n]},defineProperty(t,r,n){return r in e&&delete e[r],Reflect.defineProperty(i,r,n),!0},getOwnPropertyDescriptor(t,r){return r in e?Reflect.getOwnPropertyDescriptor(e,r):Reflect.getOwnPropertyDescriptor(i,r)},has(t,r){return r in e||r in i}})}async function X(){if(j!==void 0&&globalThis.crypto!==void 0)return globalThis.crypto.subtle;try{let{webcrypto:i}=await import("crypto");return i.subtle}catch(i){throw new d(i)}}var m=class{constructor(){Object.defineProperty(this,"_api",{enumerable:!0,configurable:!0,writable:!0,value:void 0})}async _setup(){this._api===void 0&&(this._api=await X())}};var J={Base:0,Psk:1,Auth:2,AuthPsk:3},_={NotAssigned:0,DhkemP256HkdfSha256:16,DhkemP384HkdfSha384:17,DhkemP521HkdfSha512:18,DhkemSecp256k1HkdfSha256:19,DhkemX25519HkdfSha256:32,DhkemX448HkdfSha512:33,HybridkemX25519Kyber768:48},W={HkdfSha256:1,HkdfSha384:2,HkdfSha512:3},Z={Aes128Gcm:1,Aes256Gcm:2,Chacha20Poly1305:3,ExportOnly:65535};var I=8192,q=32,w=new Uint8Array(0);var P=new Uint8Array([75,69,77,0,0]);var h=i=>typeof i=="object"&&i!==null&&typeof i.privateKey=="object"&&typeof i.publicKey=="object";function x(i,e){if(e<=0)throw new Error("i2Osp: too small size");if(i>=256**e)throw new Error("i2Osp: too large integer");let t=new Uint8Array(e);for(let r=0;r<e&&i;r++)t[e-(r+1)]=i%256,i=i>>8;return t}function l(i,e){let t=new Uint8Array(i.length+e.length);return t.set(i,0),t.set(e,i.length),t}function N(i){let e=i.replace(/-/g,"+").replace(/_/g,"/"),t=atob(e),r=new Uint8Array(t.length);for(let n=0;n<t.length;n++)r[n]=t.charCodeAt(n);return r}function Q(i,e){if(i.byteLength!==e.byteLength)throw new Error("xor: different length inputs");let t=new Uint8Array(i.byteLength);for(let r=0;r<i.byteLength;r++)t[r]=i[r]^e[r];return t}var V=new Uint8Array([101,97,101,95,112,114,107]),ee=new Uint8Array([115,104,97,114,101,100,95,115,101,99,114,101,116]);function te(i,e,t){let r=new Uint8Array(i.length+e.length+t.length);return r.set(i,0),r.set(e,i.length),r.set(t,i.length+e.length),r}var L=class{constructor(e,t,r){Object.defineProperty(this,"id",{enumerable:!0,configurable:!0,writable:!0,value:void 0}),Object.defineProperty(this,"secretSize",{enumerable:!0,configurable:!0,writable:!0,value:0}),Object.defineProperty(this,"encSize",{enumerable:!0,configurable:!0,writable:!0,value:0}),Object.defineProperty(this,"publicKeySize",{enumerable:!0,configurable:!0,writable:!0,value:0}),Object.defineProperty(this,"privateKeySize",{enumerable:!0,configurable:!0,writable:!0,value:0}),Object.defineProperty(this,"_prim",{enumerable:!0,configurable:!0,writable:!0,value:void 0}),Object.defineProperty(this,"_kdf",{enumerable:!0,configurable:!0,writable:!0,value:void 0}),this.id=e,this._prim=t,this._kdf=r;let n=new Uint8Array(P);n.set(x(this.id,2),3),this._kdf.init(n)}async serializePublicKey(e){return await this._prim.serializePublicKey(e)}async deserializePublicKey(e){return await this._prim.deserializePublicKey(e)}async serializePrivateKey(e){return await this._prim.serializePrivateKey(e)}async deserializePrivateKey(e){return await this._prim.deserializePrivateKey(e)}async importKey(e,t,r=!0){return await this._prim.importKey(e,t,r)}async generateKeyPair(){return await this._prim.generateKeyPair()}async deriveKeyPair(e){if(e.byteLength>8192)throw new b("Too long ikm");return await this._prim.deriveKeyPair(e)}async encap(e){let t;e.ekm===void 0?t=await this.generateKeyPair():h(e.ekm)?t=e.ekm:t=await this.deriveKeyPair(e.ekm);let r=await this._prim.serializePublicKey(t.publicKey),n=await this._prim.serializePublicKey(e.recipientPublicKey);try{let a;if(e.senderKey===void 0)a=new Uint8Array(await this._prim.dh(t.privateKey,e.recipientPublicKey));else{let u=h(e.senderKey)?e.senderKey.privateKey:e.senderKey,p=new Uint8Array(await this._prim.dh(t.privateKey,e.recipientPublicKey)),U=new Uint8Array(await this._prim.dh(u,e.recipientPublicKey));a=l(p,U)}let s;if(e.senderKey===void 0)s=l(new Uint8Array(r),new Uint8Array(n));else{let u=h(e.senderKey)?e.senderKey.publicKey:await this._prim.derivePublicKey(e.senderKey),p=await this._prim.serializePublicKey(u);s=te(new Uint8Array(r),new Uint8Array(n),new Uint8Array(p))}let o=await this._generateSharedSecret(a,s);return{enc:r,sharedSecret:o}}catch(a){throw new v(a)}}async decap(e){let t=await this._prim.deserializePublicKey(e.enc),r=h(e.recipientKey)?e.recipientKey.privateKey:e.recipientKey,n=h(e.recipientKey)?e.recipientKey.publicKey:await this._prim.derivePublicKey(e.recipientKey),a=await this._prim.serializePublicKey(n);try{let s;if(e.senderPublicKey===void 0)s=new Uint8Array(await this._prim.dh(r,t));else{let u=new Uint8Array(await this._prim.dh(r,t)),p=new Uint8Array(await this._prim.dh(r,e.senderPublicKey));s=l(u,p)}let o;if(e.senderPublicKey===void 0)o=l(new Uint8Array(e.enc),new Uint8Array(a));else{let u=await this._prim.serializePublicKey(e.senderPublicKey);o=new Uint8Array(e.enc.byteLength+a.byteLength+u.byteLength),o.set(new Uint8Array(e.enc),0),o.set(new Uint8Array(a),e.enc.byteLength),o.set(new Uint8Array(u),e.enc.byteLength+a.byteLength)}return await this._generateSharedSecret(s,o)}catch(s){throw new k(s)}}async _generateSharedSecret(e,t){let r=this._kdf.buildLabeledIkm(V,e),n=this._kdf.buildLabeledInfo(ee,t,this.secretSize);return await this._kdf.extractAndExpand(w,r,n,this.secretSize)}};var E=["deriveBits"],g=new Uint8Array([100,107,112,95,112,114,107]),D=new Uint8Array([115,107]);var S=class{constructor(e){Object.defineProperty(this,"_num",{enumerable:!0,configurable:!0,writable:!0,value:void 0}),this._num=new Uint8Array(e)}val(){return this._num}reset(){this._num.fill(0)}set(e){if(e.length!==this._num.length)throw new Error("Bignum.set: invalid argument");this._num.set(e)}isZero(){for(let e=0;e<this._num.length;e++)if(this._num[e]!==0)return!1;return!0}lessThan(e){if(e.length!==this._num.length)throw new Error("Bignum.lessThan: invalid argument");for(let t=0;t<this._num.length;t++){if(this._num[t]<e[t])return!0;if(this._num[t]>e[t])return!1}return!1}};var re=new Uint8Array([99,97,110,100,105,100,97,116,101]),ie=new Uint8Array([255,255,255,255,0,0,0,0,255,255,255,255,255,255,255,255,188,230,250,173,167,23,158,132,243,185,202,194,252,99,37,81]),ne=new Uint8Array([255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,199,99,77,129,244,55,45,223,88,26,13,178,72,176,167,122,236,236,25,106,204,197,41,115]),ae=new Uint8Array([1,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,250,81,134,135,131,191,47,150,107,127,204,1,72,247,9,165,208,59,181,201,184,137,156,71,174,187,111,183,30,145,56,100,9]),se=new Uint8Array([48,65,2,1,0,48,19,6,7,42,134,72,206,61,2,1,6,8,42,134,72,206,61,3,1,7,4,39,48,37,2,1,1,4,32]),oe=new Uint8Array([48,78,2,1,0,48,16,6,7,42,134,72,206,61,2,1,6,5,43,129,4,0,34,4,55,48,53,2,1,1,4,48]),ce=new Uint8Array([48,96,2,1,0,48,16,6,7,42,134,72,206,61,2,1,6,5,43,129,4,0,35,4,73,48,71,2,1,1,4,66]),T=class extends m{constructor(e,t){switch(super(),Object.defineProperty(this,"_hkdf",{enumerable:!0,configurable:!0,writable:!0,value:void 0}),Object.defineProperty(this,"_alg",{enumerable:!0,configurable:!0,writable:!0,value:void 0}),Object.defineProperty(this,"_nPk",{enumerable:!0,configurable:!0,writable:!0,value:void 0}),Object.defineProperty(this,"_nSk",{enumerable:!0,configurable:!0,writable:!0,value:void 0}),Object.defineProperty(this,"_nDh",{enumerable:!0,configurable:!0,writable:!0,value:void 0}),Object.defineProperty(this,"_order",{enumerable:!0,configurable:!0,writable:!0,value:void 0}),Object.defineProperty(this,"_bitmask",{enumerable:!0,configurable:!0,writable:!0,value:void 0}),Object.defineProperty(this,"_pkcs8AlgId",{enumerable:!0,configurable:!0,writable:!0,value:void 0}),this._hkdf=t,e){case _.DhkemP256HkdfSha256:this._alg={name:"ECDH",namedCurve:"P-256"},this._nPk=65,this._nSk=32,this._nDh=32,this._order=ie,this._bitmask=255,this._pkcs8AlgId=se;break;case _.DhkemP384HkdfSha384:this._alg={name:"ECDH",namedCurve:"P-384"},this._nPk=97,this._nSk=48,this._nDh=48,this._order=ne,this._bitmask=255,this._pkcs8AlgId=oe;break;default:this._alg={name:"ECDH",namedCurve:"P-521"},this._nPk=133,this._nSk=66,this._nDh=66,this._order=ae,this._bitmask=1,this._pkcs8AlgId=ce;break}}async serializePublicKey(e){await this._setup();try{return await this._api.exportKey("raw",e)}catch(t){throw new y(t)}}async deserializePublicKey(e){await this._setup();try{return await this._importRawKey(e,!0)}catch(t){throw new f(t)}}async serializePrivateKey(e){await this._setup();try{let t=await this._api.exportKey("jwk",e);if(!("d"in t))throw new Error("Not private key");return N(t.d)}catch(t){throw new y(t)}}async deserializePrivateKey(e){await this._setup();try{return await this._importRawKey(e,!1)}catch(t){throw new f(t)}}async importKey(e,t,r){await this._setup();try{if(e==="raw")return await this._importRawKey(t,r);if(t instanceof ArrayBuffer)throw new Error("Invalid jwk key format");return await this._importJWK(t,r)}catch(n){throw new f(n)}}async generateKeyPair(){await this._setup();try{return await this._api.generateKey(this._alg,!0,E)}catch(e){throw new d(e)}}async deriveKeyPair(e){await this._setup();try{let t=await this._hkdf.labeledExtract(w,g,new Uint8Array(e)),r=new S(this._nSk);for(let a=0;r.isZero()||!r.lessThan(this._order);a++){if(a>255)throw new Error("Faild to derive a key pair");let s=new Uint8Array(await this._hkdf.labeledExpand(t,re,x(a,1),this._nSk));s[0]=s[0]&this._bitmask,r.set(s)}let n=await this._deserializePkcs8Key(r.val());return r.reset(),{privateKey:n,publicKey:await this.derivePublicKey(n)}}catch(t){throw new A(t)}}async derivePublicKey(e){await this._setup();try{let t=await this._api.exportKey("jwk",e);return delete t.d,delete t.key_ops,await this._api.importKey("jwk",t,this._alg,!0,[])}catch(t){throw new f(t)}}async dh(e,t){try{return await this._setup(),await this._api.deriveBits({name:"ECDH",public:t},e,this._nDh*8)}catch(r){throw new y(r)}}async _importRawKey(e,t){if(t&&e.byteLength!==this._nPk)throw new Error("Invalid public key for the ciphersuite");if(!t&&e.byteLength!==this._nSk)throw new Error("Invalid private key for the ciphersuite");return t?await this._api.importKey("raw",e,this._alg,!0,[]):await this._deserializePkcs8Key(new Uint8Array(e))}async _importJWK(e,t){if(typeof e.crv>"u"||e.crv!==this._alg.namedCurve)throw new Error(`Invalid crv: ${e.crv}`);if(t){if(typeof e.d<"u")throw new Error("Invalid key: `d` should not be set");return await this._api.importKey("jwk",e,this._alg,!0,[])}if(typeof e.d>"u")throw new Error("Invalid key: `d` not found");return await this._api.importKey("jwk",e,this._alg,!0,E)}async _deserializePkcs8Key(e){let t=new Uint8Array(this._pkcs8AlgId.length+e.length);return t.set(this._pkcs8AlgId,0),t.set(e,this._pkcs8AlgId.length),await this._api.importKey("pkcs8",t,this._alg,!0,E)}};var K=class{constructor(e,t,r,n=[]){Object.defineProperty(this,"key",{enumerable:!0,configurable:!0,writable:!0,value:void 0}),Object.defineProperty(this,"type",{enumerable:!0,configurable:!0,writable:!0,value:void 0}),Object.defineProperty(this,"extractable",{enumerable:!0,configurable:!0,writable:!0,value:!0}),Object.defineProperty(this,"algorithm",{enumerable:!0,configurable:!0,writable:!0,value:void 0}),Object.defineProperty(this,"usages",{enumerable:!0,configurable:!0,writable:!0,value:void 0}),this.key=t,this.type=r,this.algorithm={name:e},this.usages=n,r==="public"&&(this.usages=[])}};var R=class{constructor(e,t,r,n){Object.defineProperty(this,"id",{enumerable:!0,configurable:!0,writable:!0,value:_.NotAssigned}),Object.defineProperty(this,"name",{enumerable:!0,configurable:!0,writable:!0,value:""}),Object.defineProperty(this,"secretSize",{enumerable:!0,configurable:!0,writable:!0,value:0}),Object.defineProperty(this,"encSize",{enumerable:!0,configurable:!0,writable:!0,value:0}),Object.defineProperty(this,"publicKeySize",{enumerable:!0,configurable:!0,writable:!0,value:0}),Object.defineProperty(this,"privateKeySize",{enumerable:!0,configurable:!0,writable:!0,value:0}),Object.defineProperty(this,"_a",{enumerable:!0,configurable:!0,writable:!0,value:void 0}),Object.defineProperty(this,"_b",{enumerable:!0,configurable:!0,writable:!0,value:void 0}),Object.defineProperty(this,"_kdf",{enumerable:!0,configurable:!0,writable:!0,value:void 0}),this.id=e,this._a=t,this._b=r,this._kdf=n;let a=new Uint8Array(P);a.set(x(this.id,2),3),this._kdf.init(a)}async serializePublicKey(e){try{return await this._serializePublicKey(e)}catch(t){throw new y(t)}}async deserializePublicKey(e){try{return await this._deserializePublicKey(e)}catch(t){throw new f(t)}}async serializePrivateKey(e){try{return await this._serializePrivateKey(e)}catch(t){throw new y(t)}}async deserializePrivateKey(e){try{return await this._deserializePrivateKey(e)}catch(t){throw new f(t)}}async generateKeyPair(){let e=await this._a.generateKeyPair(),t=await this._b.generateKeyPair(),r=await this._a.serializePublicKey(e.publicKey),n=await this._a.serializePrivateKey(e.privateKey),a=await this._b.serializePublicKey(t.publicKey),s=await this._b.serializePrivateKey(t.privateKey);return{publicKey:await this.deserializePublicKey(l(new Uint8Array(r),new Uint8Array(a))),privateKey:await this.deserializePrivateKey(l(new Uint8Array(n),new Uint8Array(s)))}}async deriveKeyPair(e){let t=await this._kdf.labeledExtract(w,g,new Uint8Array(e)),r=new Uint8Array(await this._kdf.labeledExpand(t,D,w,96)),n=r.slice(0,32),a=r.slice(32,96),s=await this._a.deriveKeyPair(n),o=await this._b.deriveKeyPair(a),u=await this._a.serializePublicKey(s.publicKey),p=await this._a.serializePrivateKey(s.privateKey),U=await this._b.serializePublicKey(o.publicKey),G=await this._b.serializePrivateKey(o.privateKey);return{publicKey:await this.deserializePublicKey(l(new Uint8Array(u),new Uint8Array(U))),privateKey:await this.deserializePrivateKey(l(new Uint8Array(p),new Uint8Array(G)))}}async importKey(e,t,r=!0){if(e!=="raw")throw new d("'jwk' is not supported");if(!(t instanceof ArrayBuffer))throw new b("Invalid type of key");return r?await this.deserializePublicKey(t):await this.deserializePrivateKey(t)}async encap(e){let t,r;if(e.ekm!==void 0&&!h(e.ekm)){if(e.ekm.byteLength!==64)throw new b("ekm must be 64 bytes in length");t=e.ekm.slice(0,32),r=e.ekm.slice(32)}let n=new Uint8Array(await this.serializePublicKey(e.recipientPublicKey)),a=await this._a.deserializePublicKey(n.slice(0,this._a.publicKeySize)),s=await this._b.deserializePublicKey(n.slice(this._a.publicKeySize)),o=await this._a.encap({recipientPublicKey:a,ekm:t}),u=await this._b.encap({recipientPublicKey:s,ekm:r});return{sharedSecret:l(new Uint8Array(o.sharedSecret),new Uint8Array(u.sharedSecret)),enc:l(new Uint8Array(o.enc),new Uint8Array(u.enc))}}async decap(e){let t=h(e.recipientKey)?e.recipientKey.privateKey:e.recipientKey,r=new Uint8Array(await this.serializePrivateKey(t)),n=await this._a.deserializePrivateKey(r.slice(0,this._a.privateKeySize)),a=await this._b.deserializePrivateKey(r.slice(this._a.privateKeySize)),s=await this._a.decap({recipientKey:n,enc:e.enc.slice(0,this._a.encSize)}),o=await this._b.decap({recipientKey:a,enc:e.enc.slice(this._a.encSize)});return l(new Uint8Array(s),new Uint8Array(o))}_serializePublicKey(e){return new Promise((t,r)=>{e.type!=="public"&&r(new Error("Not public key")),e.algorithm.name!==this.name&&r(new Error(`Invalid algorithm name: ${e.algorithm.name}`)),e.key.byteLength!==this.publicKeySize&&r(new Error(`Invalid key length: ${e.key.byteLength}`)),t(e.key.buffer)})}_deserializePublicKey(e){return new Promise((t,r)=>{e.byteLength!==this.publicKeySize&&r(new Error(`Invalid key length: ${e.byteLength}`)),t(new K(this.name,new Uint8Array(e),"public"))})}_serializePrivateKey(e){return new Promise((t,r)=>{e.type!=="private"&&r(new Error("Not private key")),e.algorithm.name!==this.name&&r(new Error(`Invalid algorithm name: ${e.algorithm.name}`)),e.key.byteLength!==this.privateKeySize&&r(new Error(`Invalid key length: ${e.key.byteLength}`)),t(e.key.buffer)})}_deserializePrivateKey(e){return new Promise((t,r)=>{e.byteLength!==this.privateKeySize&&r(new Error(`Invalid key length: ${e.byteLength}`)),t(new K(this.name,new Uint8Array(e),"private",["deriveBits"]))})}};var le=["encrypt","decrypt"];export{le as AEAD_USAGES,Z as AeadId,z as BaseError,k as DecapError,A as DeriveKeyPairError,f as DeserializeError,L as Dhkem,w as EMPTY,T as Ec,v as EncapError,H as ExportError,c as HpkeError,R as Hybridkem,I as INPUT_LENGTH_LIMIT,b as InvalidParamError,W as KdfId,_ as KemId,g as LABEL_DKP_PRK,D as LABEL_SK,q as MINIMUM_PSK_LENGTH,M as MessageLimitReachedError,J as Mode,m as NativeAlgorithm,d as NotSupportedError,C as OpenError,P as SUITE_ID_HEADER_KEM,O as SealError,y as SerializeError,B as ValidationError,K as XCryptoKey,l as concat,x as i2Osp,h as isCryptoKeyPair,Q as xor};
